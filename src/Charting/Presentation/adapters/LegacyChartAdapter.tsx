import React from 'react';
import { useCryptoData } from '../../../hooks/useCryptoData';
import { useAstronomicalEvents } from '../../../hooks/useAstronomicalEvents';
import { useStore } from '../../../store';
import { ChartComponent } from '../components/ChartComponent';
import { AstronomicalEvent as NewAstronomicalEvent } from '../../Infrastructure/utils/AstronomicalEventUtils';
import { AstronomicalEvent as OldAstronomicalEvent } from '../../../services/astronomicalEvents';

interface LegacyChartAdapterProps {
  height?: number;
  className?: string;
  cryptoData?: Array<{
    symbol: string;
    time: string;
    open: number;
    high: number;
    low: number;
    close: number;
    volume: number;
  }>;
  astronomicalEvents?: NewAstronomicalEvent[];
  eventFilters?: {
    lunar?: boolean;
    solar?: boolean;
    planetary?: boolean;
    meteor?: boolean;
  };
  symbol?: string;
  timeframe?: string;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å—Ç–∞—Ä—ã—Ö –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
function convertAstronomicalEvents(oldEvents: OldAstronomicalEvent[]): NewAstronomicalEvent[] {
  return oldEvents.map(event => ({
    timestamp: event.timestamp,
    name: event.name,
    description: event.description,
    type: event.type
  }));
}

export const LegacyChartAdapter: React.FC<LegacyChartAdapterProps> = ({
  height = 400,
  className = '',
  cryptoData: propCryptoData,
  astronomicalEvents: propAstronomicalEvents,
  eventFilters = { lunar: true, solar: true, planetary: true, meteor: true },
  symbol: propSymbol,
  timeframe: propTimeframe
}) => {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ store
  const { symbol: storeSymbol, timeframe: storeTimeframe } = useStore();
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–ø—Å—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ store
  const symbol = propSymbol || storeSymbol;
  const timeframe = propTimeframe || storeTimeframe;

  // –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∏–ø—Ç–æ–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Ö—É–∫
  const { data: hookCryptoData, loading: cryptoLoading, error: cryptoError } = useCryptoData(symbol, timeframe);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–ø—Å–æ–≤ –∏–ª–∏ –∏–∑ —Ö—É–∫–∞
  const cryptoData = propCryptoData || hookCryptoData || [];

  // –ü–æ–ª—É—á–∞–µ–º –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
  const { events: hookAstronomicalEvents, loading: astroLoading } = useAstronomicalEvents(
    new Date(Date.now() - 365 * 24 * 60 * 60 * 1000), // 1 –≥–æ–¥ –Ω–∞–∑–∞–¥
    new Date(Date.now() + 90 * 24 * 60 * 60 * 1000)   // 3 –º–µ—Å—è—Ü–∞ –≤–ø–µ—Ä–µ–¥
  );

  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
  const convertedHookEvents = hookAstronomicalEvents ? convertAstronomicalEvents(hookAstronomicalEvents) : [];
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –ø—Ä–æ–ø—Å–æ–≤ –∏–ª–∏ –∏–∑ —Ö—É–∫–∞
  const astronomicalEvents = propAstronomicalEvents || convertedHookEvents || [];

  console.log('[LegacyChartAdapter] üîç Astronomical events details:', {
    hookEventsLength: hookAstronomicalEvents?.length || 0,
    convertedHookEventsLength: convertedHookEvents.length,
    propEventsLength: propAstronomicalEvents?.length || 0,
    finalEventsLength: astronomicalEvents.length,
    firstEvent: astronomicalEvents[0],
    lastEvent: astronomicalEvents[astronomicalEvents.length - 1],
    astroLoading
  });

  console.log('[LegacyChartAdapter] Rendering with:', {
    symbol,
    timeframe,
    cryptoDataLength: cryptoData.length,
    astronomicalEventsLength: astronomicalEvents.length,
    cryptoLoading,
    astroLoading,
    cryptoError,
    hookCryptoDataLength: hookCryptoData?.length || 0,
    propCryptoDataLength: propCryptoData?.length || 0
  });

  return (
    <ChartComponent
      symbol={symbol}
      timeframe={timeframe}
      height={height}
      className={className}
      cryptoData={cryptoData}
      astronomicalEvents={astronomicalEvents}
      eventFilters={eventFilters}
    />
  );
}; 