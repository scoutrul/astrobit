import React, { useState, useCallback, useEffect } from 'react';
import { PostType } from '../../../Domain/value-objects/PostType';
import { GenerateContentRequest, GenerateContentResponse } from '../../../Application/use-cases/ai/GenerateContentUseCase';
import { HistoricalPostsSelector } from '../history/HistoricalPostsSelector';
// import { TagRepository } from '../../../Infrastructure/services/TagRepository'; // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ
import { CachedAIService } from '../../../Infrastructure/services/ai/CachedAIService';
import { CircuitBreakerAIService } from '../../../Infrastructure/services/ai/CircuitBreakerAIService';
import { OpenRouterAIService } from '../../../Infrastructure/services/ai/OpenRouterAIService';

interface ContentGeneratorProps {
  onContentGenerated: (content: string, metadata: any) => void;
  onError: (error: string) => void;
  disabled?: boolean;
  generateContentUseCase?: any; // –ë—É–¥–µ—Ç —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–∑–∂–µ
}

interface GenerationState {
  isGenerating: boolean;
  selectedType: string;
  selectedHistoricalPosts: Array<{
    id: string;
    title: string;
    type: string;
    createdAt: string;
    tags: string[];
    content: string;
    metadata: {
      wordCount: number;
      significance: number;
      popularity?: number;
    };
  }>;
  customPrompt: string;
  targetAudience: 'beginner' | 'intermediate' | 'advanced';
  contentLength: 'short' | 'medium' | 'long';
  generatedContent: string;
  suggestedTags: string[];
  showHistoricalSelector: boolean;
  showAdvancedOptions: boolean;
  lastGeneration?: {
    content: string;
    metadata: any;
    timestamp: Date;
  };
  cacheStats?: {
    hitRate: number;
    totalRequests: number;
    tokensSaved: number;
  };
}

export const ContentGenerator: React.FC<ContentGeneratorProps> = ({
  onContentGenerated,
  onError,
  disabled = false,
  generateContentUseCase
}) => {
  const [state, setState] = useState<GenerationState>({
    isGenerating: false,
    selectedType: 'astronomical_announcement',
    selectedHistoricalPosts: [],
    customPrompt: '',
    targetAudience: 'intermediate',
    contentLength: 'medium',
    generatedContent: '',
    suggestedTags: [],
    showHistoricalSelector: false,
    showAdvancedOptions: false
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å—é
  const [aiService] = useState(() => {
    const baseService = new OpenRouterAIService();
    const circuitBreakerService = new CircuitBreakerAIService(baseService, {
      failureThreshold: 3,
      recoveryTimeout: 30000,
      successThreshold: 2,
      monitoringWindow: 60000
    });
    return new CachedAIService(circuitBreakerService, {
      maxMemoryEntries: 50,
      defaultTTL: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
      enableSemanticSearch: true
    });
  });

  // const [tagRepository] = useState(() => new TagRepository()); // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ

  const postTypes = [
    { value: 'astronomical_announcement', label: '–ê–Ω–æ–Ω—Å –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è', icon: 'üåô', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö' },
    { value: 'market_retrospective', label: '–†–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–∞ —Ä—ã–Ω–∫–∞', icon: 'üìà', description: '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–≤–∏–∂–µ–Ω–∏–π –∑–∞ –ø–µ—Ä–∏–æ–¥' },
    { value: 'analytical_post', label: '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Å—Ç', icon: 'üìä', description: '–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏–∏ –∏ —Ä—ã–Ω–∫–æ–≤' },
    { value: 'general_post', label: '–û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç', icon: 'üìù', description: '–û–±—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç' }
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞
  useEffect(() => {
    const updateCacheStats = () => {
      const stats = aiService.getCacheStats();
      setState(prev => ({ ...prev, cacheStats: stats }));
    };

    updateCacheStats();
    const interval = setInterval(updateCacheStats, 10000); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

    return () => clearInterval(interval);
  }, [aiService]);

  const handleGenerate = useCallback(async () => {
    if (state.isGenerating || disabled) return;

    setState(prev => ({ ...prev, isGenerating: true, generatedContent: '', suggestedTags: [] }));

    try {
      let result: GenerateContentResponse;

      if (generateContentUseCase) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π use case —Å –Ω–æ–≤—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
        const request: GenerateContentRequest = {
          postType: PostType.create(state.selectedType as any),
          customPrompt: state.customPrompt || undefined,
          historicalPostIds: state.selectedHistoricalPosts.map(p => p.id),
          targetAudience: state.targetAudience,
          contentLength: state.contentLength,
          includeAnalysis: state.selectedType !== 'general_post',
          includeForecast: state.selectedType === 'analytical_post'
        };

        const useCase = generateContentUseCase;
        const response = await useCase.execute(request);
        
        if (!response.isSuccess) {
          throw new Error(response.error?.message || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
        }

        result = response.value;

      } else {
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        console.info('ü§ñ AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', {
          type: state.selectedType,
          historicalPosts: state.selectedHistoricalPosts.length,
          customPrompt: state.customPrompt,
          audience: state.targetAudience,
          length: state.contentLength
        });

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        const contentContext = `
          –¢–∏–ø –ø–æ—Å—Ç–∞: ${state.selectedType}
          –ê—É–¥–∏—Ç–æ—Ä–∏—è: ${state.targetAudience}
          –î–ª–∏–Ω–∞: ${state.contentLength}
          –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è: ${state.customPrompt}
          –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: ${state.selectedHistoricalPosts.map(p => p.title).join('; ')}
        `;

        // –°–∏–º—É–ª–∏—Ä—É–µ–º AI –≤—ã–∑–æ–≤ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        const aiResult = await aiService.generate(
          `–°–æ–∑–¥–∞–π ${state.contentLength} –ø–æ—Å—Ç —Ç–∏–ø–∞ "${state.selectedType}" –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏ "${state.targetAudience}". ${state.customPrompt}`,
          {
            model: 'gpt-3.5-turbo',
            maxTokens: state.contentLength === 'short' ? 200 : state.contentLength === 'medium' ? 400 : 800,
            temperature: 0.8,
            systemPrompt: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–∞ AstroBit, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—é –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã. 
            –ê—É–¥–∏—Ç–æ—Ä–∏—è: ${state.targetAudience}. 
            –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${contentContext}`
          }
        );

        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–µ–≥–æ–≤
        // const tagSuggestions = await tagRepository.suggestTags(contentContext, 8); // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ
                const suggestedTags: string[] = []; // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ

        const selectedType = postTypes.find(t => t.value === state.selectedType);
        const mockContent = `${selectedType?.icon} ${selectedType?.label}

üöÄ –≠—Ç–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π AI-–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å:
- ‚ö° Intelligent –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (—ç–∫–æ–Ω–æ–º–∏—è —Ç–æ–∫–µ–Ω–æ–≤)
- üè∑Ô∏è Smart –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ —Ç–µ–≥–æ–≤
- üìö –ö–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏–∑ ${state.selectedHistoricalPosts.length} –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–æ—Å—Ç–æ–≤
- üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø–æ–¥ –∞—É–¥–∏—Ç–æ—Ä–∏—é: ${state.targetAudience}
- üìè –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω–æ–π: ${state.contentLength}

${selectedType?.description}

${state.customPrompt ? `üé® –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è: ${state.customPrompt}` : ''}

${suggestedTags.length > 0 ? `üè∑Ô∏è –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏: ${suggestedTags.slice(0, 5).map((tag: any) => `#${tag}`).join(' ')}` : ''}

#–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è #–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã #–∞–Ω–∞–ª–∏–∑ #–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ #astrobit`;

        result = {
          title: `${selectedType?.icon} ${selectedType?.label}`,
          content: mockContent,
          suggestedTags: suggestedTags.map((tag: any) => ({ name: tag } as any)), // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
          metadata: {
            model: aiResult.metadata.model || 'gpt-3.5-turbo',
            tokens: aiResult.metadata.tokens || 200,
            confidence: aiResult.metadata.confidence || 0.9,
            generationType: state.selectedType,
            contextUsed: {
              astronomicalEvents: 0,
              historicalPosts: state.selectedHistoricalPosts.length,
              marketDataIncluded: false
            }
          }
        };
      }

      setState(prev => ({
        ...prev,
        isGenerating: false,
        generatedContent: result.content,
        suggestedTags: result.suggestedTags ? result.suggestedTags.map(tag => tag.name) : [],
        lastGeneration: {
          content: result.content,
          metadata: result.metadata,
          timestamp: new Date()
        }
      }));

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–µ–≥–æ–≤
      if (result.suggestedTags && result.suggestedTags.length > 0) {
        // tagRepository.recordTagUsage(result.suggestedTags.map(tag => tag.name), result.content); // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ
      }

      onContentGenerated(result.content, result.metadata);

    } catch (error) {
      setState(prev => ({ ...prev, isGenerating: false }));
      const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞';
      console.error('[ContentGenerator] –û—à–∏–±–∫–∞:', error);
      onError(errorMessage);
    }
  }, [state, disabled, onContentGenerated, onError, generateContentUseCase, postTypes, aiService]);

  const handleTypeChange = (type: string) => {
    setState(prev => ({ 
      ...prev, 
      selectedType: type,
      selectedHistoricalPosts: [] // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–æ—Å—Ç—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∏–ø–∞
    }));
  };

  const handlePromptChange = (prompt: string) => {
    setState(prev => ({ ...prev, customPrompt: prompt }));
  };

  const handleAudienceChange = (audience: 'beginner' | 'intermediate' | 'advanced') => {
    setState(prev => ({ ...prev, targetAudience: audience }));
  };

  const handleLengthChange = (length: 'short' | 'medium' | 'long') => {
    setState(prev => ({ ...prev, contentLength: length }));
  };

  const handleHistoricalPostsSelected = (posts: any[]) => {
    setState(prev => ({ ...prev, selectedHistoricalPosts: posts }));
  };

  const toggleHistoricalSelector = () => {
    setState(prev => ({ ...prev, showHistoricalSelector: !prev.showHistoricalSelector }));
  };

  const toggleAdvancedOptions = () => {
    setState(prev => ({ ...prev, showAdvancedOptions: !prev.showAdvancedOptions }));
  };

  const clearCache = () => {
    aiService.clearCache();
    setState(prev => ({ ...prev, cacheStats: aiService.getCacheStats() }));
  };

  const selectedPostType = postTypes.find(t => t.value === state.selectedType);

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div className="mb-6">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold text-gray-900 flex items-center">
            ü§ñ AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            {state.cacheStats && (
              <span className="ml-3 text-sm text-green-600 bg-green-50 px-2 py-1 rounded">
                ‚ö° {Math.round(state.cacheStats.hitRate * 100)}% cache hit
              </span>
            )}
          </h2>
          
          {/* Cache stats –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
          <div className="flex items-center space-x-2">
            {state.cacheStats && (
              <div className="text-xs text-gray-500">
                üìä {state.cacheStats.totalRequests} –∑–∞–ø—Ä–æ—Å–æ–≤, 
                üí∞ {state.cacheStats.tokensSaved} —Ç–æ–∫–µ–Ω–æ–≤ —Å—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ
              </div>
            )}
            <button
              onClick={toggleAdvancedOptions}
              className="px-3 py-1 text-xs bg-gray-100 text-gray-600 rounded hover:bg-gray-200 transition-colors"
            >
              ‚öôÔ∏è {state.showAdvancedOptions ? '–°–∫—Ä—ã—Ç—å' : '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'}
            </button>
          </div>
        </div>

        {/* Advanced Options */}
        {state.showAdvancedOptions && (
          <div className="mb-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
            <h3 className="text-sm font-medium text-gray-700 mb-3">üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
            <div className="flex items-center space-x-4">
              <button
                onClick={clearCache}
                className="px-3 py-1 text-xs bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors"
              >
                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
              </button>
              <button
                onClick={() => aiService.refreshCache()}
                className="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors"
              >
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à
              </button>
              {state.cacheStats && (
                <div className="text-xs text-gray-600">
                  Cache —Ä–∞–∑–º–µ—Ä: {state.cacheStats.totalRequests} –∑–∞–ø–∏—Å–µ–π
                </div>
              )}
            </div>
          </div>
        )}
        
        {/* –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞ */}
        <div className="mb-6">
          <label className="block text-sm font-medium text-gray-700 mb-3">
            –¢–∏–ø –ø–æ—Å—Ç–∞
          </label>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
            {postTypes.map((type) => (
              <button
                key={type.value}
                onClick={() => handleTypeChange(type.value)}
                className={`p-4 text-left rounded-lg border transition-colors ${
                  state.selectedType === type.value
                    ? 'border-blue-500 bg-blue-50 text-blue-900'
                    : 'border-gray-200 hover:border-gray-300 text-gray-700 hover:bg-gray-50'
                }`}
                disabled={disabled}
              >
                <div className="flex items-center mb-2">
                  <span className="text-lg mr-2">{type.icon}</span>
                  <span className="font-medium">{type.label}</span>
                </div>
                <p className="text-xs text-gray-600">{type.description}</p>
              </button>
            ))}
          </div>
        </div>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
          {/* –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
            </label>
            <select
              value={state.targetAudience}
              onChange={(e) => handleAudienceChange(e.target.value as any)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              disabled={disabled}
            >
              <option value="beginner">–ù–∞—á–∏–Ω–∞—é—â–∏–µ</option>
              <option value="intermediate">–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å</option>
              <option value="advanced">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ</option>
            </select>
          </div>

          {/* –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            </label>
            <select
              value={state.contentLength}
              onChange={(e) => handleLengthChange(e.target.value as any)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              disabled={disabled}
            >
              <option value="short">–ö–æ—Ä–æ—Ç–∫–∏–π (200-400 —Å–∏–º–≤–æ–ª–æ–≤)</option>
              <option value="medium">–°—Ä–µ–¥–Ω–∏–π (400-800 —Å–∏–º–≤–æ–ª–æ–≤)</option>
              <option value="long">–î–ª–∏–Ω–Ω—ã–π (800-1200 —Å–∏–º–≤–æ–ª–æ–≤)</option>
            </select>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–æ—Å—Ç–æ–≤ */}
        <div className="mb-6">
          <div className="flex items-center justify-between mb-2">
            <label className="block text-sm font-medium text-gray-700">
              –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            </label>
            <button
              onClick={toggleHistoricalSelector}
              className="px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors"
            >
              üìö {state.showHistoricalSelector ? '–°–∫—Ä—ã—Ç—å' : '–í—ã–±—Ä–∞—Ç—å –ø–æ—Å—Ç—ã'}
            </button>
          </div>
          
          {state.selectedHistoricalPosts.length > 0 && (
            <div className="p-3 bg-blue-50 rounded-lg border border-blue-200">
              <p className="text-sm text-blue-800 mb-2">
                ‚úÖ –í—ã–±—Ä–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {state.selectedHistoricalPosts.length}
              </p>
              <div className="space-y-1">
                {state.selectedHistoricalPosts.slice(0, 3).map(post => (
                  <div key={post.id} className="text-xs text-blue-700 truncate">
                    üìÑ {post.title}
                  </div>
                ))}
                {state.selectedHistoricalPosts.length > 3 && (
                  <div className="text-xs text-blue-600">
                    +{state.selectedHistoricalPosts.length - 3} –µ—â–µ...
                  </div>
                )}
              </div>
            </div>
          )}
        </div>

        {/* Historical Posts Selector */}
        {state.showHistoricalSelector && (
          <div className="mb-6">
            <HistoricalPostsSelector
              onPostsSelected={handleHistoricalPostsSelected}
              maxSelections={10}
              autoSelectRelevant={true}
              contentContext={`${state.selectedType} ${state.customPrompt}`}
              postType={state.selectedType}
            />
          </div>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è */}
        <div className="mb-6">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          </label>
          <textarea
            value={state.customPrompt}
            onChange={(e) => handlePromptChange(e.target.value)}
            placeholder="–û–ø–∏—à–∏—Ç–µ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É, —Å—Ç–∏–ª—å –∏–∑–ª–æ–∂–µ–Ω–∏—è, –∞–∫—Ü–µ–Ω—Ç—ã..."
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
            rows={3}
            disabled={disabled}
          />
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
        <div className="flex items-center justify-between">
          <button
            onClick={handleGenerate}
            disabled={state.isGenerating || disabled}
            className={`px-6 py-3 rounded-md font-medium transition-colors ${
              state.isGenerating || disabled
                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                : 'bg-blue-600 text-white hover:bg-blue-700 active:bg-blue-800'
            }`}
          >
            {state.isGenerating ? (
              <div className="flex items-center">
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...
              </div>
            ) : (
              `‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ${selectedPostType?.label.toLowerCase()}`
            )}
          </button>

          {state.lastGeneration && (
            <div className="text-xs text-gray-500">
              –ü–æ—Å–ª–µ–¥–Ω—è—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {state.lastGeneration.timestamp.toLocaleTimeString()}
              {state.lastGeneration.metadata.cached && (
                <span className="ml-2 text-green-600">‚ö° –∏–∑ –∫—ç—à–∞</span>
              )}
            </div>
          )}
        </div>
      </div>

      {/* –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä */}
      {state.generatedContent && (
        <div className="border-t pt-6">
          <h3 className="text-sm font-medium text-gray-700 mb-3 flex items-center">
            üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            <span className="ml-2 text-xs text-gray-500">
              ({state.generatedContent.length} —Å–∏–º–≤–æ–ª–æ–≤)
            </span>
          </h3>
          <div className="bg-gray-50 rounded-md p-4 border border-gray-200">
            <pre className="whitespace-pre-wrap text-sm text-gray-800 font-mono leading-relaxed">
              {state.generatedContent}
            </pre>
          </div>

          {/* –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏ */}
          {state.suggestedTags.length > 0 && (
            <div className="mt-4">
              <h4 className="text-sm font-medium text-gray-700 mb-2">üè∑Ô∏è –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏</h4>
              <div className="flex flex-wrap gap-2">
                {state.suggestedTags.map(tag => (
                  <span
                    key={tag}
                    className="px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full border border-blue-200"
                  >
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {state.lastGeneration && (
            <div className="mt-3 flex items-center justify-between text-xs text-gray-500">
              <div className="flex items-center space-x-4">
                <span>–ú–æ–¥–µ–ª—å: {state.lastGeneration.metadata.model}</span>
                <span>–¢–æ–∫–µ–Ω—ã: {state.lastGeneration.metadata.tokens}</span>
                <span>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {Math.round(state.lastGeneration.metadata.confidence * 100)}%</span>
                {state.lastGeneration.metadata.cached && (
                  <span className="text-green-600">‚ö° –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</span>
                )}
              </div>
              <div className="flex items-center space-x-2">
                <span>–ö–æ–Ω—Ç–µ–∫—Å—Ç:</span>
                <span>{state.lastGeneration.metadata.contextUsed?.historicalPosts || 0} –ø–æ—Å—Ç–æ–≤</span>
                <span>{state.lastGeneration.metadata.contextUsed?.tagSuggestions || 0} —Ç–µ–≥–æ–≤</span>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  );
};
